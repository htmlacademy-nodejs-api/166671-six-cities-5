openapi: 3.0.0
info:
  title: API сервер для демо-проекта «Куплю. Продам».
  description: |-
    * Список ресурсов и маршрутов сервера «Куплю. Продам».

  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: offers
    description: Действия с объявлениями.
  - name: users
    description: Действия с пользователем.
  - name: comments
    description: Действия с комментариями.

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.
      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение
        аватара должно быть в формате `png` или `jpg`.

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения.
      description: Создание нового предложения авторизованным пользователем.
      requestBody:
        description: Информация для создания нового предложения.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOffer"

components:
  schemas:
    CreateUser:
      type: object
      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        name:
          type: string
          example: Keks

        password:
          type: string
          example: 123456

        user-type:
          type: string
          example: common

    User:
      type: object
      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        email:
          type: string
          example: keks@htmlacademy.ru

    CreateOffer:
      type: object
      properties:
        authorId:
          type: string
          example: 6329c3d6a04ab1061c6425ea
          description: Автор предложения. Обязательное. Ссылка на сущность «Пользователь».

        city:
          type: string
          example: Paris
          description: Город. Обязательное.

        coords:
          $ref: "#/components/schemas/Coords"
          description: Координаты предложения для аренды. Обязательное. Координаты представлены широтой и долготой.

        datePublication:
          type: string
          example: 2023-09-27T04:45:02.342Z
          description: Дата публикации предложения. Обязательное.

        description:
          type: string
          example: хорошие апартаменты.
          description: Описание предложения. Обязательное. Мин. длина 20 символов, макс. длина 1024 символа;

        features:
          type: array
          items:
            $ref: "#/components/schemas/HousingFeature"
          example: ["Towels", "Fridge"]
          description: Удобства. Обязательное. Список удобств. Один или несколько вариантов из списка.

        isFavorites:
          type: boolean
          description: Флаг «Избранное». Обязательное. Признак того, что предложение принадлежит списку избранных предложений пользователя;

        isPremium:
          type: boolean
          description: Флаг «Премиум». Обязательное. Признак премиальности предложения;

        numberGuests:
          type: integer
          example: 4
          description: Количество гостей. Обязательное. Мин. 1, Макс. 10.

        numberRooms:
          type: integer
          example: 2
          description: Количество комнат. Обязательное. Мин. 1, Макс. 8.

        photosHousing:
          type: array
          items:
            type: string

          example: ["photo1.jpg", "...", "photo6.jpg"]
          description: Фотографии жилья. Обязательное. Список ссылок на фотографии жилья. Всегда 6 фотографий.

        previewImage:
          type: string
          example: "preview.jpg"
          description: Превью изображения. Обязательное. Ссылка на изображение, которое используется в качестве превью;

        rating:
          type: number
          example: 3.4
          description: Рейтинг. Обязательное. Число от 1 до 5. Допускаются числа с запятой (1 знак после запятой);

        rentalPrice:
          type: integer
          example: 100
          description: Стоимость аренды. Обязательное. Мин. 100, Макс. 100 000;

        title:
          type: string
          example: наименование предложения.
          description: Наименование. Обязательное. Мин. длин 10 символов, макс. длина 100;

        typeHousing:
          $ref: "#/components/schemas/TypeHousing"

    Coords:
      type: object
      properties:
        latitude:
          type: number
          format: int32

        longitude:
          type: number
          format: int32
      example: { latitude: 48.85661, longitude: 2.351499 }
      description: Координаты.

    HousingFeature:
      type: string
      enum:
        - "Breakfast"
        - "Air conditioning"
        - "Laptop friendly workspace"
        - "Baby seat"
        - "Washer"
        - "Towels"
        - "Fridge"
      example: Towels
      description: Удобства.

    TypeHousing:
      type: string
      enum:
        - "apartment"
        - "house"
        - "room"
        - "hotel"
      example: "hotel"
      description: Тип жилья.
